package objc

public trait <metaclass-for-A> : objc.<metaclass-for-NSObject>, objc.<metaclass-for-P>, objc.<metaclass-for-Q> {
}

public trait <metaclass-for-NSObject> {
}

public trait <metaclass-for-P> {
}

public trait <metaclass-for-Q> {
}

public open class A : objc.NSObject, objc.P, objc.Q {
    invisible_fake abstract override /*1*/ /*fake_override*/ val pointer: kotlin.Long
    public open override /*1*/ /*fake_override*/ fun anotherMethod(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun protocolMethod(): kotlin.Unit
    
    public class object <class-object-for-A> : kotlin.jvm.objc.ObjCClass, objc.<metaclass-for-A>, objc.NSObject {
        invisible_fake abstract override /*1*/ /*fake_override*/ val pointer: kotlin.Long
    }
}

public open class NSObject : kotlin.jvm.objc.ObjCObject {
    invisible_fake abstract override /*1*/ /*fake_override*/ val pointer: kotlin.Long
    
    public class object <class-object-for-NSObject> : kotlin.jvm.objc.ObjCClass, objc.<metaclass-for-NSObject>, objc.NSObject {
        invisible_fake abstract override /*1*/ /*fake_override*/ val pointer: kotlin.Long
    }
}

public trait P {
    public open fun protocolMethod(): kotlin.Unit
}

public trait Q {
    public open fun anotherMethod(): kotlin.Int
}
