// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ObjCIndex.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ObjCIndex.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* Function_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Function_reflection_ = NULL;
const ::google::protobuf::Descriptor* Function_Parameter_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Function_Parameter_reflection_ = NULL;
const ::google::protobuf::Descriptor* ObjCMethod_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ObjCMethod_reflection_ = NULL;
const ::google::protobuf::Descriptor* ObjCProperty_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ObjCProperty_reflection_ = NULL;
const ::google::protobuf::Descriptor* ObjCClass_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ObjCClass_reflection_ = NULL;
const ::google::protobuf::Descriptor* ObjCProtocol_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ObjCProtocol_reflection_ = NULL;
const ::google::protobuf::Descriptor* ObjCCategory_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ObjCCategory_reflection_ = NULL;
const ::google::protobuf::Descriptor* TranslationUnit_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TranslationUnit_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ObjCIndex_2eproto() {
  protobuf_AddDesc_ObjCIndex_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ObjCIndex.proto");
  GOOGLE_CHECK(file != NULL);
  Function_descriptor_ = file->message_type(0);
  static const int Function_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Function, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Function, return_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Function, parameter_),
  };
  Function_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Function_descriptor_,
      Function::default_instance_,
      Function_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Function, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Function, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Function));
  Function_Parameter_descriptor_ = Function_descriptor_->nested_type(0);
  static const int Function_Parameter_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Function_Parameter, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Function_Parameter, type_),
  };
  Function_Parameter_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Function_Parameter_descriptor_,
      Function_Parameter::default_instance_,
      Function_Parameter_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Function_Parameter, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Function_Parameter, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Function_Parameter));
  ObjCMethod_descriptor_ = file->message_type(1);
  static const int ObjCMethod_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjCMethod, function_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjCMethod, class_method_),
  };
  ObjCMethod_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ObjCMethod_descriptor_,
      ObjCMethod::default_instance_,
      ObjCMethod_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjCMethod, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjCMethod, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ObjCMethod));
  ObjCProperty_descriptor_ = file->message_type(2);
  static const int ObjCProperty_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjCProperty, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjCProperty, type_),
  };
  ObjCProperty_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ObjCProperty_descriptor_,
      ObjCProperty::default_instance_,
      ObjCProperty_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjCProperty, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjCProperty, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ObjCProperty));
  ObjCClass_descriptor_ = file->message_type(3);
  static const int ObjCClass_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjCClass, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjCClass, base_class_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjCClass, protocol_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjCClass, category_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjCClass, method_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjCClass, property_),
  };
  ObjCClass_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ObjCClass_descriptor_,
      ObjCClass::default_instance_,
      ObjCClass_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjCClass, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjCClass, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ObjCClass));
  ObjCProtocol_descriptor_ = file->message_type(4);
  static const int ObjCProtocol_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjCProtocol, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjCProtocol, base_protocol_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjCProtocol, method_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjCProtocol, property_),
  };
  ObjCProtocol_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ObjCProtocol_descriptor_,
      ObjCProtocol::default_instance_,
      ObjCProtocol_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjCProtocol, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjCProtocol, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ObjCProtocol));
  ObjCCategory_descriptor_ = file->message_type(5);
  static const int ObjCCategory_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjCCategory, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjCCategory, base_protocol_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjCCategory, method_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjCCategory, property_),
  };
  ObjCCategory_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ObjCCategory_descriptor_,
      ObjCCategory::default_instance_,
      ObjCCategory_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjCCategory, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjCCategory, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ObjCCategory));
  TranslationUnit_descriptor_ = file->message_type(6);
  static const int TranslationUnit_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TranslationUnit, class__),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TranslationUnit, protocol_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TranslationUnit, category_),
  };
  TranslationUnit_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TranslationUnit_descriptor_,
      TranslationUnit::default_instance_,
      TranslationUnit_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TranslationUnit, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TranslationUnit, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TranslationUnit));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ObjCIndex_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Function_descriptor_, &Function::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Function_Parameter_descriptor_, &Function_Parameter::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ObjCMethod_descriptor_, &ObjCMethod::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ObjCProperty_descriptor_, &ObjCProperty::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ObjCClass_descriptor_, &ObjCClass::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ObjCProtocol_descriptor_, &ObjCProtocol::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ObjCCategory_descriptor_, &ObjCCategory::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TranslationUnit_descriptor_, &TranslationUnit::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ObjCIndex_2eproto() {
  delete Function::default_instance_;
  delete Function_reflection_;
  delete Function_Parameter::default_instance_;
  delete Function_Parameter_reflection_;
  delete ObjCMethod::default_instance_;
  delete ObjCMethod_reflection_;
  delete ObjCProperty::default_instance_;
  delete ObjCProperty_reflection_;
  delete ObjCClass::default_instance_;
  delete ObjCClass_reflection_;
  delete ObjCProtocol::default_instance_;
  delete ObjCProtocol_reflection_;
  delete ObjCCategory::default_instance_;
  delete ObjCCategory_reflection_;
  delete TranslationUnit::default_instance_;
  delete TranslationUnit_reflection_;
}

void protobuf_AddDesc_ObjCIndex_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\017ObjCIndex.proto\"~\n\010Function\022\014\n\004name\030\001 "
    "\002(\t\022\023\n\013return_type\030\002 \002(\t\022&\n\tparameter\030\003 "
    "\003(\0132\023.Function.Parameter\032\'\n\tParameter\022\014\n"
    "\004name\030\001 \002(\t\022\014\n\004type\030\002 \002(\t\"\?\n\nObjCMethod\022"
    "\033\n\010function\030\001 \002(\0132\t.Function\022\024\n\014class_me"
    "thod\030\002 \002(\010\"*\n\014ObjCProperty\022\014\n\004name\030\001 \002(\t"
    "\022\014\n\004type\030\002 \002(\t\"\217\001\n\tObjCClass\022\014\n\004name\030\001 \002"
    "(\t\022\022\n\nbase_class\030\002 \001(\t\022\020\n\010protocol\030\003 \003(\t"
    "\022\020\n\010category\030\004 \003(\t\022\033\n\006method\030\005 \003(\0132\013.Obj"
    "CMethod\022\037\n\010property\030\006 \003(\0132\r.ObjCProperty"
    "\"q\n\014ObjCProtocol\022\014\n\004name\030\001 \002(\t\022\025\n\rbase_p"
    "rotocol\030\002 \003(\t\022\033\n\006method\030\003 \003(\0132\013.ObjCMeth"
    "od\022\037\n\010property\030\004 \003(\0132\r.ObjCProperty\"q\n\014O"
    "bjCCategory\022\014\n\004name\030\001 \002(\t\022\025\n\rbase_protoc"
    "ol\030\002 \003(\t\022\033\n\006method\030\003 \003(\0132\013.ObjCMethod\022\037\n"
    "\010property\030\004 \003(\0132\r.ObjCProperty\"n\n\017Transl"
    "ationUnit\022\031\n\005class\030\001 \003(\0132\n.ObjCClass\022\037\n\010"
    "protocol\030\002 \003(\0132\r.ObjCProtocol\022\037\n\010categor"
    "y\030\003 \003(\0132\r.ObjCCategoryB(\n#org.jetbrains."
    "jet.lang.resolve.objc\210\001\000", 784);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ObjCIndex.proto", &protobuf_RegisterTypes);
  Function::default_instance_ = new Function();
  Function_Parameter::default_instance_ = new Function_Parameter();
  ObjCMethod::default_instance_ = new ObjCMethod();
  ObjCProperty::default_instance_ = new ObjCProperty();
  ObjCClass::default_instance_ = new ObjCClass();
  ObjCProtocol::default_instance_ = new ObjCProtocol();
  ObjCCategory::default_instance_ = new ObjCCategory();
  TranslationUnit::default_instance_ = new TranslationUnit();
  Function::default_instance_->InitAsDefaultInstance();
  Function_Parameter::default_instance_->InitAsDefaultInstance();
  ObjCMethod::default_instance_->InitAsDefaultInstance();
  ObjCProperty::default_instance_->InitAsDefaultInstance();
  ObjCClass::default_instance_->InitAsDefaultInstance();
  ObjCProtocol::default_instance_->InitAsDefaultInstance();
  ObjCCategory::default_instance_->InitAsDefaultInstance();
  TranslationUnit::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ObjCIndex_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ObjCIndex_2eproto {
  StaticDescriptorInitializer_ObjCIndex_2eproto() {
    protobuf_AddDesc_ObjCIndex_2eproto();
  }
} static_descriptor_initializer_ObjCIndex_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int Function_Parameter::kNameFieldNumber;
const int Function_Parameter::kTypeFieldNumber;
#endif  // !_MSC_VER

Function_Parameter::Function_Parameter()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Function_Parameter::InitAsDefaultInstance() {
}

Function_Parameter::Function_Parameter(const Function_Parameter& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Function_Parameter::SharedCtor() {
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  type_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Function_Parameter::~Function_Parameter() {
  SharedDtor();
}

void Function_Parameter::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (type_ != &::google::protobuf::internal::kEmptyString) {
    delete type_;
  }
  if (this != default_instance_) {
  }
}

void Function_Parameter::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Function_Parameter::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Function_Parameter_descriptor_;
}

const Function_Parameter& Function_Parameter::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ObjCIndex_2eproto();
  return *default_instance_;
}

Function_Parameter* Function_Parameter::default_instance_ = NULL;

Function_Parameter* Function_Parameter::New() const {
  return new Function_Parameter;
}

void Function_Parameter::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
    if (has_type()) {
      if (type_ != &::google::protobuf::internal::kEmptyString) {
        type_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Function_Parameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_type;
        break;
      }

      // required string type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->type().data(), this->type().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Function_Parameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->name(), output);
  }

  // required string type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Function_Parameter::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required string type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Function_Parameter::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // required string type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Function_Parameter::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Function_Parameter* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Function_Parameter*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Function_Parameter::MergeFrom(const Function_Parameter& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Function_Parameter::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Function_Parameter::CopyFrom(const Function_Parameter& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Function_Parameter::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void Function_Parameter::Swap(Function_Parameter* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Function_Parameter::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Function_Parameter_descriptor_;
  metadata.reflection = Function_Parameter_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Function::kNameFieldNumber;
const int Function::kReturnTypeFieldNumber;
const int Function::kParameterFieldNumber;
#endif  // !_MSC_VER

Function::Function()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Function::InitAsDefaultInstance() {
}

Function::Function(const Function& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Function::SharedCtor() {
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  return_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Function::~Function() {
  SharedDtor();
}

void Function::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (return_type_ != &::google::protobuf::internal::kEmptyString) {
    delete return_type_;
  }
  if (this != default_instance_) {
  }
}

void Function::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Function::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Function_descriptor_;
}

const Function& Function::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ObjCIndex_2eproto();
  return *default_instance_;
}

Function* Function::default_instance_ = NULL;

Function* Function::New() const {
  return new Function;
}

void Function::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
    if (has_return_type()) {
      if (return_type_ != &::google::protobuf::internal::kEmptyString) {
        return_type_->clear();
      }
    }
  }
  parameter_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Function::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_return_type;
        break;
      }

      // required string return_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_return_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_return_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->return_type().data(), this->return_type().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_parameter;
        break;
      }

      // repeated .Function.Parameter parameter = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_parameter:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_parameter()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_parameter;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Function::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->name(), output);
  }

  // required string return_type = 2;
  if (has_return_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->return_type().data(), this->return_type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->return_type(), output);
  }

  // repeated .Function.Parameter parameter = 3;
  for (int i = 0; i < this->parameter_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->parameter(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Function::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required string return_type = 2;
  if (has_return_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->return_type().data(), this->return_type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->return_type(), target);
  }

  // repeated .Function.Parameter parameter = 3;
  for (int i = 0; i < this->parameter_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->parameter(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Function::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // required string return_type = 2;
    if (has_return_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->return_type());
    }

  }
  // repeated .Function.Parameter parameter = 3;
  total_size += 1 * this->parameter_size();
  for (int i = 0; i < this->parameter_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->parameter(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Function::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Function* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Function*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Function::MergeFrom(const Function& from) {
  GOOGLE_CHECK_NE(&from, this);
  parameter_.MergeFrom(from.parameter_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_return_type()) {
      set_return_type(from.return_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Function::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Function::CopyFrom(const Function& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Function::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  for (int i = 0; i < parameter_size(); i++) {
    if (!this->parameter(i).IsInitialized()) return false;
  }
  return true;
}

void Function::Swap(Function* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(return_type_, other->return_type_);
    parameter_.Swap(&other->parameter_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Function::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Function_descriptor_;
  metadata.reflection = Function_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ObjCMethod::kFunctionFieldNumber;
const int ObjCMethod::kClassMethodFieldNumber;
#endif  // !_MSC_VER

ObjCMethod::ObjCMethod()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ObjCMethod::InitAsDefaultInstance() {
  function_ = const_cast< ::Function*>(&::Function::default_instance());
}

ObjCMethod::ObjCMethod(const ObjCMethod& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ObjCMethod::SharedCtor() {
  _cached_size_ = 0;
  function_ = NULL;
  class_method_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ObjCMethod::~ObjCMethod() {
  SharedDtor();
}

void ObjCMethod::SharedDtor() {
  if (this != default_instance_) {
    delete function_;
  }
}

void ObjCMethod::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ObjCMethod::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ObjCMethod_descriptor_;
}

const ObjCMethod& ObjCMethod::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ObjCIndex_2eproto();
  return *default_instance_;
}

ObjCMethod* ObjCMethod::default_instance_ = NULL;

ObjCMethod* ObjCMethod::New() const {
  return new ObjCMethod;
}

void ObjCMethod::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_function()) {
      if (function_ != NULL) function_->::Function::Clear();
    }
    class_method_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ObjCMethod::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Function function = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_function()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_class_method;
        break;
      }

      // required bool class_method = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_class_method:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &class_method_)));
          set_has_class_method();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ObjCMethod::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .Function function = 1;
  if (has_function()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->function(), output);
  }

  // required bool class_method = 2;
  if (has_class_method()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->class_method(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ObjCMethod::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .Function function = 1;
  if (has_function()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->function(), target);
  }

  // required bool class_method = 2;
  if (has_class_method()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->class_method(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ObjCMethod::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Function function = 1;
    if (has_function()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->function());
    }

    // required bool class_method = 2;
    if (has_class_method()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ObjCMethod::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ObjCMethod* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ObjCMethod*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ObjCMethod::MergeFrom(const ObjCMethod& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_function()) {
      mutable_function()->::Function::MergeFrom(from.function());
    }
    if (from.has_class_method()) {
      set_class_method(from.class_method());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ObjCMethod::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjCMethod::CopyFrom(const ObjCMethod& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjCMethod::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_function()) {
    if (!this->function().IsInitialized()) return false;
  }
  return true;
}

void ObjCMethod::Swap(ObjCMethod* other) {
  if (other != this) {
    std::swap(function_, other->function_);
    std::swap(class_method_, other->class_method_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ObjCMethod::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ObjCMethod_descriptor_;
  metadata.reflection = ObjCMethod_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ObjCProperty::kNameFieldNumber;
const int ObjCProperty::kTypeFieldNumber;
#endif  // !_MSC_VER

ObjCProperty::ObjCProperty()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ObjCProperty::InitAsDefaultInstance() {
}

ObjCProperty::ObjCProperty(const ObjCProperty& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ObjCProperty::SharedCtor() {
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  type_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ObjCProperty::~ObjCProperty() {
  SharedDtor();
}

void ObjCProperty::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (type_ != &::google::protobuf::internal::kEmptyString) {
    delete type_;
  }
  if (this != default_instance_) {
  }
}

void ObjCProperty::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ObjCProperty::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ObjCProperty_descriptor_;
}

const ObjCProperty& ObjCProperty::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ObjCIndex_2eproto();
  return *default_instance_;
}

ObjCProperty* ObjCProperty::default_instance_ = NULL;

ObjCProperty* ObjCProperty::New() const {
  return new ObjCProperty;
}

void ObjCProperty::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
    if (has_type()) {
      if (type_ != &::google::protobuf::internal::kEmptyString) {
        type_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ObjCProperty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_type;
        break;
      }

      // required string type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->type().data(), this->type().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ObjCProperty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->name(), output);
  }

  // required string type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ObjCProperty::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required string type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ObjCProperty::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // required string type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ObjCProperty::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ObjCProperty* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ObjCProperty*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ObjCProperty::MergeFrom(const ObjCProperty& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ObjCProperty::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjCProperty::CopyFrom(const ObjCProperty& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjCProperty::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void ObjCProperty::Swap(ObjCProperty* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ObjCProperty::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ObjCProperty_descriptor_;
  metadata.reflection = ObjCProperty_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ObjCClass::kNameFieldNumber;
const int ObjCClass::kBaseClassFieldNumber;
const int ObjCClass::kProtocolFieldNumber;
const int ObjCClass::kCategoryFieldNumber;
const int ObjCClass::kMethodFieldNumber;
const int ObjCClass::kPropertyFieldNumber;
#endif  // !_MSC_VER

ObjCClass::ObjCClass()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ObjCClass::InitAsDefaultInstance() {
}

ObjCClass::ObjCClass(const ObjCClass& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ObjCClass::SharedCtor() {
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  base_class_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ObjCClass::~ObjCClass() {
  SharedDtor();
}

void ObjCClass::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (base_class_ != &::google::protobuf::internal::kEmptyString) {
    delete base_class_;
  }
  if (this != default_instance_) {
  }
}

void ObjCClass::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ObjCClass::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ObjCClass_descriptor_;
}

const ObjCClass& ObjCClass::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ObjCIndex_2eproto();
  return *default_instance_;
}

ObjCClass* ObjCClass::default_instance_ = NULL;

ObjCClass* ObjCClass::New() const {
  return new ObjCClass;
}

void ObjCClass::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
    if (has_base_class()) {
      if (base_class_ != &::google::protobuf::internal::kEmptyString) {
        base_class_->clear();
      }
    }
  }
  protocol_.Clear();
  category_.Clear();
  method_.Clear();
  property_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ObjCClass::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_base_class;
        break;
      }

      // optional string base_class = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_base_class:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_base_class()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->base_class().data(), this->base_class().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_protocol;
        break;
      }

      // repeated string protocol = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_protocol:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_protocol()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->protocol(this->protocol_size() - 1).data(),
            this->protocol(this->protocol_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_protocol;
        if (input->ExpectTag(34)) goto parse_category;
        break;
      }

      // repeated string category = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_category:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_category()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->category(this->category_size() - 1).data(),
            this->category(this->category_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_category;
        if (input->ExpectTag(42)) goto parse_method;
        break;
      }

      // repeated .ObjCMethod method = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_method:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_method()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_method;
        if (input->ExpectTag(50)) goto parse_property;
        break;
      }

      // repeated .ObjCProperty property = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_property:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_property()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_property;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ObjCClass::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->name(), output);
  }

  // optional string base_class = 2;
  if (has_base_class()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->base_class().data(), this->base_class().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->base_class(), output);
  }

  // repeated string protocol = 3;
  for (int i = 0; i < this->protocol_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->protocol(i).data(), this->protocol(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->protocol(i), output);
  }

  // repeated string category = 4;
  for (int i = 0; i < this->category_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->category(i).data(), this->category(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->category(i), output);
  }

  // repeated .ObjCMethod method = 5;
  for (int i = 0; i < this->method_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->method(i), output);
  }

  // repeated .ObjCProperty property = 6;
  for (int i = 0; i < this->property_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->property(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ObjCClass::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string base_class = 2;
  if (has_base_class()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->base_class().data(), this->base_class().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->base_class(), target);
  }

  // repeated string protocol = 3;
  for (int i = 0; i < this->protocol_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->protocol(i).data(), this->protocol(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->protocol(i), target);
  }

  // repeated string category = 4;
  for (int i = 0; i < this->category_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->category(i).data(), this->category(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->category(i), target);
  }

  // repeated .ObjCMethod method = 5;
  for (int i = 0; i < this->method_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->method(i), target);
  }

  // repeated .ObjCProperty property = 6;
  for (int i = 0; i < this->property_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->property(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ObjCClass::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string base_class = 2;
    if (has_base_class()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->base_class());
    }

  }
  // repeated string protocol = 3;
  total_size += 1 * this->protocol_size();
  for (int i = 0; i < this->protocol_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->protocol(i));
  }

  // repeated string category = 4;
  total_size += 1 * this->category_size();
  for (int i = 0; i < this->category_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->category(i));
  }

  // repeated .ObjCMethod method = 5;
  total_size += 1 * this->method_size();
  for (int i = 0; i < this->method_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->method(i));
  }

  // repeated .ObjCProperty property = 6;
  total_size += 1 * this->property_size();
  for (int i = 0; i < this->property_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->property(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ObjCClass::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ObjCClass* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ObjCClass*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ObjCClass::MergeFrom(const ObjCClass& from) {
  GOOGLE_CHECK_NE(&from, this);
  protocol_.MergeFrom(from.protocol_);
  category_.MergeFrom(from.category_);
  method_.MergeFrom(from.method_);
  property_.MergeFrom(from.property_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_base_class()) {
      set_base_class(from.base_class());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ObjCClass::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjCClass::CopyFrom(const ObjCClass& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjCClass::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  for (int i = 0; i < method_size(); i++) {
    if (!this->method(i).IsInitialized()) return false;
  }
  for (int i = 0; i < property_size(); i++) {
    if (!this->property(i).IsInitialized()) return false;
  }
  return true;
}

void ObjCClass::Swap(ObjCClass* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(base_class_, other->base_class_);
    protocol_.Swap(&other->protocol_);
    category_.Swap(&other->category_);
    method_.Swap(&other->method_);
    property_.Swap(&other->property_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ObjCClass::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ObjCClass_descriptor_;
  metadata.reflection = ObjCClass_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ObjCProtocol::kNameFieldNumber;
const int ObjCProtocol::kBaseProtocolFieldNumber;
const int ObjCProtocol::kMethodFieldNumber;
const int ObjCProtocol::kPropertyFieldNumber;
#endif  // !_MSC_VER

ObjCProtocol::ObjCProtocol()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ObjCProtocol::InitAsDefaultInstance() {
}

ObjCProtocol::ObjCProtocol(const ObjCProtocol& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ObjCProtocol::SharedCtor() {
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ObjCProtocol::~ObjCProtocol() {
  SharedDtor();
}

void ObjCProtocol::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void ObjCProtocol::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ObjCProtocol::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ObjCProtocol_descriptor_;
}

const ObjCProtocol& ObjCProtocol::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ObjCIndex_2eproto();
  return *default_instance_;
}

ObjCProtocol* ObjCProtocol::default_instance_ = NULL;

ObjCProtocol* ObjCProtocol::New() const {
  return new ObjCProtocol;
}

void ObjCProtocol::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
  }
  base_protocol_.Clear();
  method_.Clear();
  property_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ObjCProtocol::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_base_protocol;
        break;
      }

      // repeated string base_protocol = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_base_protocol:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_base_protocol()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->base_protocol(this->base_protocol_size() - 1).data(),
            this->base_protocol(this->base_protocol_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_base_protocol;
        if (input->ExpectTag(26)) goto parse_method;
        break;
      }

      // repeated .ObjCMethod method = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_method:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_method()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_method;
        if (input->ExpectTag(34)) goto parse_property;
        break;
      }

      // repeated .ObjCProperty property = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_property:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_property()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_property;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ObjCProtocol::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->name(), output);
  }

  // repeated string base_protocol = 2;
  for (int i = 0; i < this->base_protocol_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->base_protocol(i).data(), this->base_protocol(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->base_protocol(i), output);
  }

  // repeated .ObjCMethod method = 3;
  for (int i = 0; i < this->method_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->method(i), output);
  }

  // repeated .ObjCProperty property = 4;
  for (int i = 0; i < this->property_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->property(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ObjCProtocol::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated string base_protocol = 2;
  for (int i = 0; i < this->base_protocol_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->base_protocol(i).data(), this->base_protocol(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->base_protocol(i), target);
  }

  // repeated .ObjCMethod method = 3;
  for (int i = 0; i < this->method_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->method(i), target);
  }

  // repeated .ObjCProperty property = 4;
  for (int i = 0; i < this->property_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->property(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ObjCProtocol::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

  }
  // repeated string base_protocol = 2;
  total_size += 1 * this->base_protocol_size();
  for (int i = 0; i < this->base_protocol_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->base_protocol(i));
  }

  // repeated .ObjCMethod method = 3;
  total_size += 1 * this->method_size();
  for (int i = 0; i < this->method_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->method(i));
  }

  // repeated .ObjCProperty property = 4;
  total_size += 1 * this->property_size();
  for (int i = 0; i < this->property_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->property(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ObjCProtocol::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ObjCProtocol* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ObjCProtocol*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ObjCProtocol::MergeFrom(const ObjCProtocol& from) {
  GOOGLE_CHECK_NE(&from, this);
  base_protocol_.MergeFrom(from.base_protocol_);
  method_.MergeFrom(from.method_);
  property_.MergeFrom(from.property_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ObjCProtocol::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjCProtocol::CopyFrom(const ObjCProtocol& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjCProtocol::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  for (int i = 0; i < method_size(); i++) {
    if (!this->method(i).IsInitialized()) return false;
  }
  for (int i = 0; i < property_size(); i++) {
    if (!this->property(i).IsInitialized()) return false;
  }
  return true;
}

void ObjCProtocol::Swap(ObjCProtocol* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    base_protocol_.Swap(&other->base_protocol_);
    method_.Swap(&other->method_);
    property_.Swap(&other->property_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ObjCProtocol::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ObjCProtocol_descriptor_;
  metadata.reflection = ObjCProtocol_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ObjCCategory::kNameFieldNumber;
const int ObjCCategory::kBaseProtocolFieldNumber;
const int ObjCCategory::kMethodFieldNumber;
const int ObjCCategory::kPropertyFieldNumber;
#endif  // !_MSC_VER

ObjCCategory::ObjCCategory()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ObjCCategory::InitAsDefaultInstance() {
}

ObjCCategory::ObjCCategory(const ObjCCategory& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ObjCCategory::SharedCtor() {
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ObjCCategory::~ObjCCategory() {
  SharedDtor();
}

void ObjCCategory::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void ObjCCategory::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ObjCCategory::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ObjCCategory_descriptor_;
}

const ObjCCategory& ObjCCategory::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ObjCIndex_2eproto();
  return *default_instance_;
}

ObjCCategory* ObjCCategory::default_instance_ = NULL;

ObjCCategory* ObjCCategory::New() const {
  return new ObjCCategory;
}

void ObjCCategory::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
  }
  base_protocol_.Clear();
  method_.Clear();
  property_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ObjCCategory::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_base_protocol;
        break;
      }

      // repeated string base_protocol = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_base_protocol:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_base_protocol()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->base_protocol(this->base_protocol_size() - 1).data(),
            this->base_protocol(this->base_protocol_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_base_protocol;
        if (input->ExpectTag(26)) goto parse_method;
        break;
      }

      // repeated .ObjCMethod method = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_method:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_method()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_method;
        if (input->ExpectTag(34)) goto parse_property;
        break;
      }

      // repeated .ObjCProperty property = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_property:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_property()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_property;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ObjCCategory::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->name(), output);
  }

  // repeated string base_protocol = 2;
  for (int i = 0; i < this->base_protocol_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->base_protocol(i).data(), this->base_protocol(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->base_protocol(i), output);
  }

  // repeated .ObjCMethod method = 3;
  for (int i = 0; i < this->method_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->method(i), output);
  }

  // repeated .ObjCProperty property = 4;
  for (int i = 0; i < this->property_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->property(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ObjCCategory::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated string base_protocol = 2;
  for (int i = 0; i < this->base_protocol_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->base_protocol(i).data(), this->base_protocol(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->base_protocol(i), target);
  }

  // repeated .ObjCMethod method = 3;
  for (int i = 0; i < this->method_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->method(i), target);
  }

  // repeated .ObjCProperty property = 4;
  for (int i = 0; i < this->property_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->property(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ObjCCategory::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

  }
  // repeated string base_protocol = 2;
  total_size += 1 * this->base_protocol_size();
  for (int i = 0; i < this->base_protocol_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->base_protocol(i));
  }

  // repeated .ObjCMethod method = 3;
  total_size += 1 * this->method_size();
  for (int i = 0; i < this->method_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->method(i));
  }

  // repeated .ObjCProperty property = 4;
  total_size += 1 * this->property_size();
  for (int i = 0; i < this->property_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->property(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ObjCCategory::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ObjCCategory* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ObjCCategory*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ObjCCategory::MergeFrom(const ObjCCategory& from) {
  GOOGLE_CHECK_NE(&from, this);
  base_protocol_.MergeFrom(from.base_protocol_);
  method_.MergeFrom(from.method_);
  property_.MergeFrom(from.property_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ObjCCategory::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjCCategory::CopyFrom(const ObjCCategory& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjCCategory::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  for (int i = 0; i < method_size(); i++) {
    if (!this->method(i).IsInitialized()) return false;
  }
  for (int i = 0; i < property_size(); i++) {
    if (!this->property(i).IsInitialized()) return false;
  }
  return true;
}

void ObjCCategory::Swap(ObjCCategory* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    base_protocol_.Swap(&other->base_protocol_);
    method_.Swap(&other->method_);
    property_.Swap(&other->property_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ObjCCategory::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ObjCCategory_descriptor_;
  metadata.reflection = ObjCCategory_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TranslationUnit::kClassFieldNumber;
const int TranslationUnit::kProtocolFieldNumber;
const int TranslationUnit::kCategoryFieldNumber;
#endif  // !_MSC_VER

TranslationUnit::TranslationUnit()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void TranslationUnit::InitAsDefaultInstance() {
}

TranslationUnit::TranslationUnit(const TranslationUnit& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void TranslationUnit::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TranslationUnit::~TranslationUnit() {
  SharedDtor();
}

void TranslationUnit::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TranslationUnit::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TranslationUnit::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TranslationUnit_descriptor_;
}

const TranslationUnit& TranslationUnit::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ObjCIndex_2eproto();
  return *default_instance_;
}

TranslationUnit* TranslationUnit::default_instance_ = NULL;

TranslationUnit* TranslationUnit::New() const {
  return new TranslationUnit;
}

void TranslationUnit::Clear() {
  class__.Clear();
  protocol_.Clear();
  category_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TranslationUnit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ObjCClass class = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_class:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_class_()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_class;
        if (input->ExpectTag(18)) goto parse_protocol;
        break;
      }

      // repeated .ObjCProtocol protocol = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_protocol:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_protocol()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_protocol;
        if (input->ExpectTag(26)) goto parse_category;
        break;
      }

      // repeated .ObjCCategory category = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_category:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_category()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_category;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void TranslationUnit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ObjCClass class = 1;
  for (int i = 0; i < this->class__size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->class_(i), output);
  }

  // repeated .ObjCProtocol protocol = 2;
  for (int i = 0; i < this->protocol_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->protocol(i), output);
  }

  // repeated .ObjCCategory category = 3;
  for (int i = 0; i < this->category_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->category(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* TranslationUnit::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ObjCClass class = 1;
  for (int i = 0; i < this->class__size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->class_(i), target);
  }

  // repeated .ObjCProtocol protocol = 2;
  for (int i = 0; i < this->protocol_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->protocol(i), target);
  }

  // repeated .ObjCCategory category = 3;
  for (int i = 0; i < this->category_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->category(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int TranslationUnit::ByteSize() const {
  int total_size = 0;

  // repeated .ObjCClass class = 1;
  total_size += 1 * this->class__size();
  for (int i = 0; i < this->class__size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->class_(i));
  }

  // repeated .ObjCProtocol protocol = 2;
  total_size += 1 * this->protocol_size();
  for (int i = 0; i < this->protocol_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->protocol(i));
  }

  // repeated .ObjCCategory category = 3;
  total_size += 1 * this->category_size();
  for (int i = 0; i < this->category_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->category(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TranslationUnit::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TranslationUnit* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TranslationUnit*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TranslationUnit::MergeFrom(const TranslationUnit& from) {
  GOOGLE_CHECK_NE(&from, this);
  class__.MergeFrom(from.class__);
  protocol_.MergeFrom(from.protocol_);
  category_.MergeFrom(from.category_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TranslationUnit::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TranslationUnit::CopyFrom(const TranslationUnit& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TranslationUnit::IsInitialized() const {

  for (int i = 0; i < class__size(); i++) {
    if (!this->class_(i).IsInitialized()) return false;
  }
  for (int i = 0; i < protocol_size(); i++) {
    if (!this->protocol(i).IsInitialized()) return false;
  }
  for (int i = 0; i < category_size(); i++) {
    if (!this->category(i).IsInitialized()) return false;
  }
  return true;
}

void TranslationUnit::Swap(TranslationUnit* other) {
  if (other != this) {
    class__.Swap(&other->class__);
    protocol_.Swap(&other->protocol_);
    category_.Swap(&other->category_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TranslationUnit::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TranslationUnit_descriptor_;
  metadata.reflection = TranslationUnit_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
