<root>
    <item name='org.conscrypt.OpenSSLSignatureRawRSA boolean engineVerify(byte[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLX509Certificate java.util.List&lt;org.conscrypt.OpenSSLX509Certificate&gt; fromPkcs7DerInputStream(java.io.InputStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLX509Certificate javax.security.auth.x500.X500Principal getIssuerX500Principal()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.HandshakeIODataStream byte[] read(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLContextImpl javax.net.ssl.SSLServerSocketFactory engineGetServerSocketFactory()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.ConnectionState byte[] decrypt(byte, byte[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.NativeCrypto java.lang.String[] checkEnabledProtocols(java.lang.String[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLECGroupContext java.security.spec.ECParameterSpec getECParameterSpec()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.SSLEngineImpl void setEnabledCipherSuites(java.lang.String[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLCipher java.lang.String getBaseCipherName()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.Logger.Stream void println(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.NativeCrypto.SSLHandshakeCallbacks void verifyCertificateChain(long[], java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLSignatureRawRSA void engineUpdate(byte[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.CipherSuite org.conscrypt.CipherSuite getByName(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLECPublicKey java.security.spec.ECParameterSpec getParams()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLX509CertificateFactory java.security.cert.CRL engineGenerateCRL(java.io.InputStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.SSLSocketImpl void setEnabledProtocols(java.lang.String[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.SSLSocketImpl void removeHandshakeCompletedListener(javax.net.ssl.HandshakeCompletedListener) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLX509CertificateFactory java.security.cert.CertPath engineGenerateCertPath(java.io.InputStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.SSLSocketInputStream int read(byte[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.TrustManagerImpl void checkClientTrusted(java.security.cert.X509Certificate[], java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLSocketImplWrapper java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.TrustManagerImpl java.util.List&lt;java.security.cert.X509Certificate&gt; checkServerTrusted(java.security.cert.X509Certificate[], java.lang.String, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLSignature void engineInitSign(java.security.PrivateKey) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.Logger.Stream void printAsHex(int, java.lang.String, java.lang.String, byte[]) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLSocketFactoryImpl java.net.Socket createSocket(java.net.Socket, java.lang.String, int, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLServerSocketImpl java.lang.String[] getSupportedProtocols()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLSocketFactoryImpl java.lang.String[] getDefaultCipherSuites()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLRSAPrivateKey OpenSSLRSAPrivateKey(java.security.spec.RSAPrivateKeySpec) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLX509Certificate java.security.Principal getSubjectDN()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.TrustManagerImpl void checkClientTrusted(java.security.cert.X509Certificate[], java.lang.String) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.Logger.Stream void print(byte[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.SSLSessionImpl java.lang.Object getValue(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLCipherRSA int engineUpdate(byte[], int, int, byte[], int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.TrustedCertificateKeyStoreSpi java.util.Date engineGetCreationDate(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLSocketImpl void removeHandshakeCompletedListener(javax.net.ssl.HandshakeCompletedListener) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLECDHKeyAgreement void engineInit(java.security.Key, java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.ClientHandshakeImpl void unwrap(byte[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLCipherRSA void engineInit(int, java.security.Key, java.security.AlgorithmParameters, java.security.SecureRandom) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.TrustManagerImpl java.util.List&lt;java.security.cert.X509Certificate&gt; checkServerTrusted(java.security.cert.X509Certificate[], java.lang.String, java.lang.String) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLECKeyFactory java.security.PrivateKey engineGeneratePrivate(java.security.spec.KeySpec)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLX509CRL java.security.cert.X509CRLEntry getRevokedCertificate(java.security.cert.X509Certificate) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLEngine java.security.PrivateKey getPrivateKeyById(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLECPublicKey java.lang.String getFormat()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLSignature void engineUpdate(byte[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLX509Certificate javax.security.auth.x500.X500Principal getSubjectX500Principal()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLECGroupContext org.conscrypt.OpenSSLECGroupContext getInstance(int, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLDSAKeyPairGenerator void initialize(java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLSocketFactoryImpl java.net.Socket createSocket(java.lang.String, int, java.net.InetAddress, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLRSAKeyFactory java.security.PrivateKey engineGeneratePrivate(java.security.spec.KeySpec) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLECPublicKey OpenSSLECPublicKey(org.conscrypt.OpenSSLKey) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.HandshakeProtocol javax.net.ssl.SSLEngineResult.HandshakeStatus getStatus()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.TrustedCertificateStore java.util.Set&lt;java.lang.String&gt; allSystemAliases()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLECPrivateKey org.conscrypt.OpenSSLKey getInstance(java.security.interfaces.ECPrivateKey)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLSignature java.lang.Object engineGetParameter(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLSignatureRawRSA void engineInitSign(java.security.PrivateKey) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.TrustedCertificateKeyStoreSpi void engineStore(java.io.OutputStream, char[]) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLDSAKeyFactory T engineGetKeySpec(java.security.Key, java.lang.Class&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLSocketFactoryImpl java.net.Socket createSocket(java.lang.String, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLCipherRSA java.security.Key engineUnwrap(byte[], java.lang.String, int) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLCipherRSA void engineInit(int, java.security.Key, java.security.AlgorithmParameters, java.security.SecureRandom) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLRSAPrivateCrtKey OpenSSLRSAPrivateCrtKey(java.security.spec.RSAPrivateCrtKeySpec) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLCipher void engineInit(int, java.security.Key, java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLECGroupContext org.conscrypt.OpenSSLECGroupContext getInstance(int, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.SSLSocketFactoryImpl java.net.Socket createSocket(java.lang.String, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLX509CertificateFactory java.util.Collection&lt;? extends java.security.cert.Certificate&gt; engineGenerateCertificates(java.io.InputStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLCipherRSA void engineInit(int, java.security.Key, java.security.SecureRandom) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLServerSocketFactoryImpl java.net.ServerSocket createServerSocket()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLRSAPrivateKey java.lang.String getAlgorithm()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.SSLContextImpl javax.net.ssl.SSLServerSocketFactory engineGetServerSocketFactory()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLX509Certificate byte[] getExtensionValue(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLSocketImpl void setEnabledProtocols(java.lang.String[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLX509CRL java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLX509CRL void verify(java.security.PublicKey, java.lang.String) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.SSLParametersImpl javax.net.ssl.X509TrustManager getDefaultTrustManager()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLCipher void engineSetMode(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLECGroupContext org.conscrypt.OpenSSLECGroupContext getInstance(int, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLSessionImpl void putValue(java.lang.String, java.lang.Object) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLCipherRSA byte[] engineUpdate(byte[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.HandshakeIODataStream int read(byte[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLKey org.conscrypt.OpenSSLKey fromPrivateKey(java.security.PrivateKey) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.TrustedCertificateStore java.util.Date getCreationDate(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLCipher void checkSupportedMode(org.conscrypt.OpenSSLCipher.Mode) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLDSAKeyFactory java.security.Key engineTranslateKey(java.security.Key)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLCipher int engineDoFinal(byte[], int, int, byte[], int) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.ConnectionState byte[] encrypt(byte, byte[], int, int) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLRSAKeyFactory java.security.PublicKey engineGeneratePublic(java.security.spec.KeySpec)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLX509CRL java.security.cert.X509CRLEntry getRevokedCertificate(java.math.BigInteger) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.SSLClientSessionCache byte[] getSessionData(java.lang.String, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLCipher.DESEDE void checkSupportedMode(org.conscrypt.OpenSSLCipher.Mode) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLX509CRL java.util.List&lt;org.conscrypt.OpenSSLX509CRL&gt; fromPkcs7DerInputStream(java.io.InputStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLX509CertificateFactory java.security.cert.CertPath engineGenerateCertPath(java.util.List&lt;? extends java.security.cert.Certificate&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLX509CRLEntry byte[] getExtensionValue(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLRSAPrivateCrtKey java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLX509Certificate org.conscrypt.OpenSSLX509Certificate fromX509DerInputStream(java.io.InputStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.ConnectionStateTLS byte[] decrypt(byte, byte[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLX509Certificate void verify(java.security.PublicKey, java.lang.String) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLRSAKeyFactory java.security.PublicKey engineGeneratePublic(java.security.spec.KeySpec) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.NativeCrypto java.lang.String[] checkEnabledCipherSuites(java.lang.String[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLCipherRSA int engineUpdate(byte[], int, int, byte[], int) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLX509CRL java.util.Date getNextUpdate()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLRSAKeyFactory java.security.PrivateKey engineGeneratePrivate(java.security.spec.KeySpec)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.SSLServerSocketImpl void setEnabledProtocols(java.lang.String[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.ServerSessionContext void sessionRemoved(javax.net.ssl.SSLSession) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.ServerKeyExchange ServerKeyExchange(org.conscrypt.HandshakeIODataStream, int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLX509CRLEntry java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLDSAKeyPairGenerator java.security.KeyPair generateKeyPair()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.SSLServerSocketImpl void setEnabledCipherSuites(java.lang.String[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.TrustedCertificateStore boolean isSystem(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLECKeyFactory T engineGetKeySpec(java.security.Key, java.lang.Class&lt;T&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.TrustedCertificateKeyStoreSpi java.security.cert.Certificate[] engineGetCertificateChain(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLServerSocketImpl void setEnabledCipherSuites(java.lang.String[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.SSLRecordProtocol byte[] getChangeCipherSpecMesage(org.conscrypt.SSLSessionImpl)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.TrustedCertificateKeyStoreSpi void engineSetCertificateEntry(java.lang.String, java.security.cert.Certificate) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.ServerHello void send(org.conscrypt.HandshakeIODataStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.TrustedCertificateStore boolean isUser(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLCipher.ARC4 java.lang.String getCipherName(int, org.conscrypt.OpenSSLCipher.Mode)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLCipher.ARC4 java.lang.String getCipherName(int, org.conscrypt.OpenSSLCipher.Mode) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.ProtocolVersion boolean isSupported(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLDSAKeyFactory java.security.PrivateKey engineGeneratePrivate(java.security.spec.KeySpec)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.SSLSessionImpl org.conscrypt.SSLSessionImpl getNullSession()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.TrustManagerFactoryImpl javax.net.ssl.TrustManager[] engineGetTrustManagers()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLECDHKeyAgreement int engineGenerateSecret(byte[], int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.SSLParametersImpl void setEnabledProtocols(java.lang.String[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLX509CRL java.util.List&lt;org.conscrypt.OpenSSLX509CRL&gt; fromPkcs7PemInputStream(java.io.InputStream)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.TrustedCertificateIndex java.security.cert.TrustAnchor findBySubjectAndPublicKey(java.security.cert.X509Certificate) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLServerSocketFactoryImpl java.net.ServerSocket createServerSocket(int, int, java.net.InetAddress)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.TrustedCertificateStore boolean containsAlias(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLKey javax.crypto.SecretKey getSecretKey(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.TrustedCertificateKeyStoreSpi void engineSetCertificateEntry(java.lang.String, java.security.cert.Certificate) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLServerSocketImpl void setEnabledProtocols(java.lang.String[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.SSLSessionImpl void removeValue(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLECKeyPairGenerator java.security.KeyPair generateKeyPair()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLSocketImpl void verifyCertificateChain(long[], java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLDSAKeyFactory java.security.PublicKey engineGeneratePublic(java.security.spec.KeySpec)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLECDHKeyAgreement javax.crypto.SecretKey engineGenerateSecret(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLRSAKeyFactory T engineGetKeySpec(java.security.Key, java.lang.Class&lt;T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.CertificateMessage CertificateMessage(org.conscrypt.HandshakeIODataStream, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.CipherSuite org.conscrypt.CipherSuite[] getSupported()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.TrustedCertificateIndex java.security.cert.TrustAnchor findByIssuerAndSignature(java.security.cert.X509Certificate) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLSocketImpl java.lang.String[] getSupportedProtocols()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLSocketImpl void setEnabledCipherSuites(java.lang.String[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.SSLInputStream byte[] read(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.ConnectionState byte[] encrypt(byte, byte[]) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLX509Certificate java.math.BigInteger getSerialNumber()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.PinListEntry boolean chainIsNotPinned(java.util.List&lt;java.security.cert.X509Certificate&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.TrustedCertificateIndex java.security.cert.TrustAnchor index(java.security.cert.X509Certificate)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.ServerHandshakeImpl void unwrapSSLv2(byte[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.ClientHello byte[] getRandom()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.ClientSessionContext void sessionRemoved(javax.net.ssl.SSLSession) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.SSLEngineImpl javax.net.ssl.SSLEngineResult wrap(java.nio.ByteBuffer[], int, int, java.nio.ByteBuffer)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.Appendable void append(byte[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.TrustedCertificateIndex java.security.cert.TrustAnchor index(java.security.cert.X509Certificate) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLCipher byte[] engineUpdate(byte[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLRSAPrivateKey java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.ClientKeyExchange ClientKeyExchange(java.math.BigInteger) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.SSLEngineDataStream byte[] getData(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.KeyManagerFactoryImpl javax.net.ssl.KeyManager[] engineGetKeyManagers()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLX509Certificate java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.NativeCrypto java.lang.String[] getSupportedProtocols()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLX509CRL byte[] getExtensionValue(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLECPrivateKey java.lang.String getAlgorithm()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.TrustedCertificateKeyStoreSpi void engineStore(java.io.OutputStream, char[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLCipher.ARC4 void checkSupportedMode(org.conscrypt.OpenSSLCipher.Mode) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.ConnectionStateTLS byte[] encrypt(byte, byte[], int, int) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.NativeCrypto java.lang.String[] getDefaultCipherSuites()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.ServerHello ServerHello(java.security.SecureRandom, byte[], byte[], org.conscrypt.CipherSuite, byte) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.HandshakeIODataStream byte[] getMessages()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.SSLSocketWrapper void connect(java.net.SocketAddress, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLRSAPublicKey java.lang.String getAlgorithm()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLCipher java.lang.String getCipherName(int, org.conscrypt.OpenSSLCipher.Mode)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.SSLServerSocketFactoryImpl SSLServerSocketFactoryImpl(org.conscrypt.SSLParametersImpl) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLDSAPublicKey java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.TrustedCertificateStore boolean isUserAddedCertificate(java.security.cert.X509Certificate) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLSignature void engineInitVerify(java.security.PublicKey) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.CertificateVerify void send(org.conscrypt.HandshakeIODataStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLX509Certificate java.util.List&lt;org.conscrypt.OpenSSLX509Certificate&gt; fromPkcs7PemInputStream(java.io.InputStream)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.X509PublicKey java.lang.String getFormat()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.TrustedCertificateStore java.security.cert.Certificate getCertificate(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLX509CertificateFactory java.security.cert.CertPath engineGenerateCertPath(java.util.List&lt;? extends java.security.cert.Certificate&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLRSAPublicKey java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.SSLContextImpl javax.net.ssl.SSLSocketFactory engineGetSocketFactory()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLEngine org.conscrypt.OpenSSLEngine getInstance(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLX509CRL java.util.List&lt;org.conscrypt.OpenSSLX509CRL&gt; fromPkcs7PemInputStream(java.io.InputStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLCipher.AES void checkSupportedMode(org.conscrypt.OpenSSLCipher.Mode) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLCipher java.security.Key engineUnwrap(byte[], java.lang.String, int) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.CertificateVerify CertificateVerify(byte[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLCipher.Mode org.conscrypt.OpenSSLCipher.Mode valueOf(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLX509CRL javax.security.auth.x500.X500Principal getIssuerX500Principal()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLCipher.AES void checkSupportedPadding(org.conscrypt.OpenSSLCipher.Padding) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.SSLContextImpl javax.net.ssl.SSLEngine engineCreateSSLEngine(java.lang.String, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLCipher.Padding org.conscrypt.OpenSSLCipher.Padding valueOf(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLSignature boolean engineVerify(byte[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLCipherRSA byte[] engineWrap(java.security.Key) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLX509CertPath java.util.List&lt;? extends java.security.cert.Certificate&gt; getCertificates()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLX509Certificate org.conscrypt.OpenSSLX509Certificate fromCertificate(java.security.cert.Certificate) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.ConnectionStateSSLv3 ConnectionStateSSLv3(org.conscrypt.SSLSessionImpl) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLX509CRL org.conscrypt.OpenSSLX509CRL fromX509PemInputStream(java.io.InputStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLECKeyFactory java.security.PublicKey engineGeneratePublic(java.security.spec.KeySpec)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.NativeCrypto void setEnabledCipherSuites(long, java.lang.String[]) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.TrustedCertificateKeyStoreSpi boolean engineIsKeyEntry(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLCipherRSA int engineDoFinal(byte[], int, int, byte[], int) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLRSAKeyFactory T engineGetKeySpec(java.security.Key, java.lang.Class&lt;T&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLX509CertificateFactory java.security.cert.CertPath engineGenerateCertPath(java.io.InputStream, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLCipherRSA void engineSetPadding(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLECPrivateKey OpenSSLECPrivateKey(java.security.spec.ECPrivateKeySpec) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLDSAPrivateKey java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.SSLInputStream int read(byte[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.SSLParametersImpl void setEnabledCipherSuites(java.lang.String[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLCipherRSA byte[] engineDoFinal(byte[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLX509CRLEntry java.util.Date getRevocationDate()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLECDHKeyAgreement javax.crypto.SecretKey engineGenerateSecret(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.ConnectionStateSSLv3 byte[] decrypt(byte, byte[], int, int) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.X509PublicKey java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.ClientHello ClientHello(java.security.SecureRandom, byte[], byte[], org.conscrypt.CipherSuite[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.SSLEngineImpl javax.net.ssl.SSLEngineResult.HandshakeStatus getHandshakeStatus()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.SSLSocketFactoryImpl java.net.Socket createSocket(java.net.InetAddress, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLECKeyFactory java.security.Key engineTranslateKey(java.security.Key)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLCipher.ARC4 java.lang.String getBaseCipherName()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.TrustedCertificateIndex void index(java.security.cert.TrustAnchor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.ClientHello void send(org.conscrypt.HandshakeIODataStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.HandshakeProtocol void unwrap(byte[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.SSLContextImpl javax.net.ssl.SSLEngine engineCreateSSLEngine()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLECPublicKey OpenSSLECPublicKey(java.security.spec.ECPublicKeySpec) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLRSAKeyFactory T engineGetKeySpec(java.security.Key, java.lang.Class&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.ServerKeyExchange void send(org.conscrypt.HandshakeIODataStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.ClientHandshakeImpl void unwrapSSLv2(byte[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLCipher.Mode org.conscrypt.OpenSSLCipher.Mode valueOf(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLECKeyFactory T engineGetKeySpec(java.security.Key, java.lang.Class&lt;T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLDSAPublicKey java.lang.String getAlgorithm()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLSessionImpl java.lang.Object getValue(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLSignature byte[] engineSign()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.ClientKeyExchange void send(org.conscrypt.HandshakeIODataStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.CipherSuite org.conscrypt.CipherSuite getByCode(byte, byte, byte)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.CertificateRequest CertificateRequest(org.conscrypt.HandshakeIODataStream, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.ServerHello ServerHello(org.conscrypt.HandshakeIODataStream, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.CertificateRequest CertificateRequest(byte[], java.security.cert.X509Certificate[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.ConnectionStateTLS ConnectionStateTLS(org.conscrypt.SSLSessionImpl) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.SSLSocketFactoryImpl java.net.Socket createSocket(java.net.Socket, java.lang.String, int, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.AlertProtocol byte[] wrap()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLSignatureRawRSA void engineInitVerify(java.security.PublicKey) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.NativeCrypto int X509_NAME_hash(javax.security.auth.x500.X500Principal) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLCipher.ARC4 void checkSupportedPadding(org.conscrypt.OpenSSLCipher.Padding) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.TrustedCertificateStore void installCertificate(java.security.cert.X509Certificate) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.SSLSocketImpl void addHandshakeCompletedListener(javax.net.ssl.HandshakeCompletedListener) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.SSLRecordProtocol byte[] wrap(byte, org.conscrypt.DataStream)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.SSLSocketImpl void connect(java.net.SocketAddress) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.ConnectionStateSSLv3 byte[] decrypt(byte, byte[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLRandom byte[] engineGenerateSeed(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLSecretKey OpenSSLSecretKey(java.lang.String, org.conscrypt.OpenSSLKey) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLContextImpl javax.net.ssl.SSLSocketFactory engineGetSocketFactory()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLServerSocketFactoryImpl java.net.ServerSocket createServerSocket(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.HelloRequest void send(org.conscrypt.HandshakeIODataStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLMessageDigestJDK java.lang.Object clone()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.TrustedCertificateKeyStoreSpi void engineSetKeyEntry(java.lang.String, java.security.Key, char[], java.security.cert.Certificate[]) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.NativeCrypto.SSLHandshakeCallbacks void clientCertificateRequested(byte[], byte[][]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.TrustedCertificateStore java.security.cert.X509Certificate findIssuer(java.security.cert.X509Certificate) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.TrustedCertificateKeyStoreSpi java.util.Enumeration&lt;java.lang.String&gt; engineAliases()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLKey java.security.PublicKey getPublicKey()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLSocketFactoryImpl java.net.Socket createSocket(java.net.InetAddress, int, java.net.InetAddress, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLECPrivateKey OpenSSLECPrivateKey(org.conscrypt.OpenSSLKey) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLServerSocketFactoryImpl java.net.ServerSocket createServerSocket(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLKey java.security.PrivateKey getPrivateKey()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLCipherRSA byte[] engineUpdate(byte[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLCipher.Padding org.conscrypt.OpenSSLCipher.Padding valueOf(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLSignatureRawRSA byte[] engineSign()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLCipher.DESEDE java.lang.String getCipherName(int, org.conscrypt.OpenSSLCipher.Mode) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLECPublicKey java.lang.String getAlgorithm()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.ClientHello ClientHello(org.conscrypt.HandshakeIODataStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.ConnectionStateTLS byte[] decrypt(byte, byte[], int, int) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.SSLSocketFactoryImpl java.net.Socket createSocket(java.lang.String, int, java.net.InetAddress, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.HandshakeIODataStream byte[] getData(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLECDHKeyAgreement void engineInit(java.security.Key, java.security.SecureRandom) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.ClientSessionContext void putSession(javax.net.ssl.SSLSession) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLSocketImplWrapper OpenSSLSocketImplWrapper(java.net.Socket, java.lang.String, int, boolean, org.conscrypt.SSLParametersImpl) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLDSAKeyFactory T engineGetKeySpec(java.security.Key, java.lang.Class&lt;T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.CertPinManager CertPinManager(java.lang.String, org.conscrypt.TrustedCertificateStore) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLCipher int engineUpdate(byte[], int, int, byte[], int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.ChainStrengthAnalyzer void check(java.security.cert.X509Certificate[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.CertificateRequest void send(org.conscrypt.HandshakeIODataStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLEngine javax.crypto.SecretKey getSecretKeyById(java.lang.String, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.SSLClientSessionCache void putSessionData(javax.net.ssl.SSLSession, byte[]) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLCipher.AES java.lang.String getBaseCipherName()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLECPublicKey java.security.spec.ECPoint getW()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLMessageDigestJDK void engineUpdate(byte[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLX509CertPath byte[] getEncoded(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.TrustedCertificateIndex TrustedCertificateIndex(java.util.Set&lt;java.security.cert.TrustAnchor&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLCipher java.security.Key engineUnwrap(byte[], java.lang.String, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.SSLRecordProtocol byte[] wrap(byte, byte[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.TrustedCertificateStore java.util.Set&lt;java.lang.String&gt; aliases()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLBIOInputStream OpenSSLBIOInputStream(java.io.InputStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.TrustedCertificateStore java.util.Set&lt;java.lang.String&gt; userAliases()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLRandom void engineNextBytes(byte[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.SSLRecordProtocol byte[] wrap(byte, org.conscrypt.DataStream) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.SSLSocketFactoryImpl java.net.Socket createSocket()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.TrustedCertificateStore java.security.cert.Certificate getCertificate(java.lang.String, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLServerSocketFactoryImpl java.lang.String[] getDefaultCipherSuites()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.DataStream byte[] getData(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.SSLSocketImpl void setEnabledCipherSuites(java.lang.String[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.ConnectionStateSSLv3 byte[] encrypt(byte, byte[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLMac void engineUpdate(byte[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLX509CRL java.security.Principal getIssuerDN()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLRSAKeyFactory java.security.Key engineTranslateKey(java.security.Key)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.ServerHello ServerHello(java.security.SecureRandom, byte[], byte[], org.conscrypt.CipherSuite, byte) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.SSLServerSocketImpl java.net.Socket accept()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.PinFailureLogger void writeToLog(java.lang.String, boolean, boolean, java.util.List&lt;java.security.cert.X509Certificate&gt;) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLDSAPrivateKey java.lang.String getAlgorithm()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLSocketImpl void clientCertificateRequested(byte[], byte[][]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.HandshakeIODataStream void append(byte[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.SSLServerSocketFactoryImpl java.net.ServerSocket createServerSocket(int, int, java.net.InetAddress)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLCipher.AES java.lang.String getCipherName(int, org.conscrypt.OpenSSLCipher.Mode) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLSecretKey org.conscrypt.OpenSSLKey getInstance(javax.crypto.SecretKey) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.TrustedCertificateKeyStoreSpi void engineSetKeyEntry(java.lang.String, java.security.Key, char[], java.security.cert.Certificate[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLECKeyFactory T engineGetKeySpec(java.security.Key, java.lang.Class&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.ProtocolVersion boolean isSupported(byte[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLSessionImpl javax.security.cert.X509Certificate[] getPeerCertificateChain()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.SSLSocketWrapper java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLECKeyFactory java.security.PrivateKey engineGeneratePrivate(java.security.spec.KeySpec) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLECDHKeyAgreement java.security.Key engineDoPhase(java.security.Key, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLX509CRLEntry java.math.BigInteger getSerialNumber()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLCipher java.lang.String getCipherName(int, org.conscrypt.OpenSSLCipher.Mode) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLDSAKeyFactory java.security.PublicKey engineGeneratePublic(java.security.spec.KeySpec) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLSocketFactoryImpl java.net.Socket createSocket()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLCipherRSA void engineInit(int, java.security.Key, java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.TrustedCertificateKeyStoreSpi void engineSetKeyEntry(java.lang.String, byte[], java.security.cert.Certificate[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.NativeCrypto java.lang.String[] getDefaultProtocols()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLX509CertPath java.security.cert.CertPath fromEncoding(java.io.InputStream, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.ClientHello ClientHello(org.conscrypt.HandshakeIODataStream, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.TrustedCertificateKeyStoreSpi boolean engineIsCertificateEntry(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLEngine org.conscrypt.OpenSSLEngine getInstance(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.ConnectionState byte[] decrypt(byte, byte[]) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.SSLClientSessionCache void putSessionData(javax.net.ssl.SSLSession, byte[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLX509CertificateFactory java.security.cert.CertPath engineGenerateCertPath(java.io.InputStream, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLCipher byte[] engineWrap(java.security.Key) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLRSAPublicKey java.lang.String getFormat()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.SSLServerSocketFactoryImpl java.net.ServerSocket createServerSocket(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLCipher byte[] engineUpdate(byte[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLSocketImplWrapper void connect(java.net.SocketAddress, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLSocketFactoryImpl java.net.Socket createSocket(java.net.Socket, java.lang.String, int, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLECPublicKey org.conscrypt.OpenSSLKey getInstance(java.security.interfaces.ECPublicKey) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLDSAKeyFactory java.security.PrivateKey engineGeneratePrivate(java.security.spec.KeySpec) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLX509CertificateFactory java.security.cert.CertPath engineGenerateCertPath(java.io.InputStream, java.lang.String) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.CipherSuite org.conscrypt.CipherSuite getByCode(byte, byte)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLCipher.DESEDE void checkSupportedPadding(org.conscrypt.OpenSSLCipher.Padding) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLCipher int engineUpdate(byte[], int, int, byte[], int) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.NativeCrypto void setEnabledProtocols(long, java.lang.String[]) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLECKeyFactory java.security.Key engineTranslateKey(java.security.Key) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.TrustedCertificateKeyStoreSpi void engineSetKeyEntry(java.lang.String, java.security.Key, char[], java.security.cert.Certificate[]) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLX509CRL boolean isRevoked(java.security.cert.Certificate) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLX509CertificateFactory java.security.cert.CertPath engineGenerateCertPath(java.io.InputStream)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLRandom void engineSetSeed(byte[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLX509CertificateFactory java.security.cert.Certificate engineGenerateCertificate(java.io.InputStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLX509CRL org.conscrypt.OpenSSLX509CRL fromX509DerInputStream(java.io.InputStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.HandshakeProtocol void send(org.conscrypt.Message) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.ProtocolVersion org.conscrypt.ProtocolVersion getByName(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.ServerHelloDone void send(org.conscrypt.HandshakeIODataStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.ConnectionStateTLS byte[] encrypt(byte, byte[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLMessageDigestJDK byte[] engineDigest()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.TrustManagerImpl void checkServerTrusted(java.security.cert.X509Certificate[], java.lang.String) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.TrustedCertificateKeyStoreSpi void engineDeleteEntry(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLCipherRSA byte[] engineWrap(java.security.Key)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.NativeCrypto java.lang.String[] checkEnabledCipherSuites(java.lang.String[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLCipher void engineInit(int, java.security.Key, java.security.AlgorithmParameters, java.security.SecureRandom) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLSessionImpl void putValue(java.lang.String, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLCipher void engineSetPadding(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.ConnectionState byte[] encrypt(byte, byte[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLCipher.DESEDE java.lang.String getCipherName(int, org.conscrypt.OpenSSLCipher.Mode)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLECKeyFactory java.security.PublicKey engineGeneratePublic(java.security.spec.KeySpec) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.SSLServerSocketImpl java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLECPrivateKey java.lang.String getFormat()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.TrustManagerImpl void checkServerTrusted(java.security.cert.X509Certificate[], java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.PinListEntry PinListEntry(java.lang.String, org.conscrypt.TrustedCertificateStore) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.SSLSocketFactoryImpl java.net.Socket createSocket(java.net.InetAddress, int, java.net.InetAddress, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.NativeCrypto java.lang.String[] checkEnabledProtocols(java.lang.String[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.SSLSessionImpl javax.security.cert.X509Certificate[] getPeerCertificateChain()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLX509Certificate java.util.List&lt;org.conscrypt.OpenSSLX509Certificate&gt; fromPkcs7PemInputStream(java.io.InputStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLCipher.AES java.lang.String getCipherName(int, org.conscrypt.OpenSSLCipher.Mode)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLECPublicKey org.conscrypt.OpenSSLKey getInstance(java.security.interfaces.ECPublicKey)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLMac void engineInit(java.security.Key, java.security.spec.AlgorithmParameterSpec) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLX509CertPath java.security.cert.CertPath fromEncoding(java.io.InputStream, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.ConnectionState byte[] decrypt(byte, byte[], int, int) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLDSAKeyFactory T engineGetKeySpec(java.security.Key, java.lang.Class&lt;T&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLServerSocketImpl java.net.Socket accept()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLCipher void engineInit(int, java.security.Key, java.security.SecureRandom) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.TrustedCertificateKeyStoreSpi java.security.cert.Certificate engineGetCertificate(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLCipherRSA java.security.Key engineUnwrap(byte[], java.lang.String, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.TrustManagerImpl java.util.List&lt;java.security.cert.X509Certificate&gt; checkServerTrusted(java.security.cert.X509Certificate[], java.lang.String, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.CipherSuite java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.ServerHandshakeImpl void unwrap(byte[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLECPrivateKey java.security.spec.ECParameterSpec getParams()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.NativeCrypto int X509_NAME_hash_old(javax.security.auth.x500.X500Principal) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLCipherRSA void engineSetMode(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.SSLSocketImpl void connect(java.net.SocketAddress, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.HandshakeIODataStream void write(byte[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.FileClientSessionCache org.conscrypt.SSLClientSessionCache usingDirectory(java.io.File)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLDSAPublicKey java.lang.String getFormat()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLX509CRL java.util.List&lt;org.conscrypt.OpenSSLX509CRL&gt; fromPkcs7DerInputStream(java.io.InputStream)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLDSAKeyFactory java.security.Key engineTranslateKey(java.security.Key) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLECGroupContext org.conscrypt.OpenSSLECGroupContext getInstance(java.security.spec.ECParameterSpec) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.ClientSessionContext javax.net.ssl.SSLSession getSession(byte[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.SSLSessionImpl void putValue(java.lang.String, java.lang.Object) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.TrustedCertificateStore boolean isTrustAnchor(java.security.cert.X509Certificate) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.SSLEngineAppData void append(byte[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLX509CertificateFactory java.util.Collection&lt;? extends java.security.cert.CRL&gt; engineGenerateCRLs(java.io.InputStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLECPrivateKey org.conscrypt.OpenSSLKey getInstance(java.security.interfaces.ECPrivateKey) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLX509Certificate org.conscrypt.OpenSSLX509Certificate fromX509PemInputStream(java.io.InputStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLSignatureRawRSA java.lang.Object engineGetParameter(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLSessionImpl void removeValue(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.SSLEngineImpl void setEnabledProtocols(java.lang.String[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.SSLSessionImpl void putValue(java.lang.String, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.TrustedCertificateStore java.util.List&lt;java.security.cert.X509Certificate&gt; getCertificateChain(java.security.cert.X509Certificate)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLCipher void checkSupportedPadding(org.conscrypt.OpenSSLCipher.Padding) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLX509Certificate java.security.Principal getIssuerDN()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.SSLEngineImpl javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer, java.nio.ByteBuffer[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.Finished void send(org.conscrypt.HandshakeIODataStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.SSLSocketWrapper void connect(java.net.SocketAddress) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.SSLSocketWrapper SSLSocketWrapper(java.net.Socket, java.lang.String, int, boolean, org.conscrypt.SSLParametersImpl) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLSocketImplWrapper void connect(java.net.SocketAddress) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLRSAKeyPairGenerator void initialize(java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.ServerSessionContext javax.net.ssl.SSLSession getSession(byte[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLECKeyPairGenerator void initialize(java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.SSLServerSocketFactoryImpl java.net.ServerSocket createServerSocket(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.ProtocolVersion org.conscrypt.ProtocolVersion getByVersion(byte[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLCipher void engineInit(int, java.security.Key, java.security.AlgorithmParameters, java.security.SecureRandom) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLECPrivateKey java.math.BigInteger getS()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLDSAParams java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLServerSocketFactoryImpl OpenSSLServerSocketFactoryImpl(org.conscrypt.SSLParametersImpl) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.TrustedCertificateIndex void reset(java.util.Set&lt;java.security.cert.TrustAnchor&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLCipher.DESEDE java.lang.String getBaseCipherName()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.TrustedCertificateKeyStoreSpi boolean engineContainsAlias(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLX509Certificate void checkValidity(java.util.Date) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.CertificateMessage void send(org.conscrypt.HandshakeIODataStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLSecretKey org.conscrypt.OpenSSLKey getInstance(javax.crypto.SecretKey)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.TrustedCertificateKeyStoreSpi java.security.Key engineGetKey(java.lang.String, char[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.HandshakeProtocol void unwrapSSLv2(byte[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLRSAKeyPairGenerator java.security.KeyPair generateKeyPair()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLX509CRL java.util.Date getThisUpdate()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLX509Certificate java.util.Date getNotAfter()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.SSLSocketFactoryImpl java.net.Socket createSocket(java.net.Socket, java.lang.String, int, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLSocketFactoryImpl java.net.Socket createSocket(java.net.InetAddress, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLRSAKeyFactory java.security.Key engineTranslateKey(java.security.Key) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLSocketImpl void addHandshakeCompletedListener(javax.net.ssl.HandshakeCompletedListener) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.SSLRecordProtocol byte[] wrap(byte, byte[], int, int) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.CertificateRequest CertificateRequest(byte[], java.security.cert.X509Certificate[]) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLX509Certificate java.util.Date getNotBefore()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.ConnectionStateSSLv3 byte[] encrypt(byte, byte[], int, int) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.SSLSocketOutputStream void write(byte[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLX509CertPath java.security.cert.CertPath fromEncoding(java.io.InputStream)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.OpenSSLX509Certificate java.util.List&lt;org.conscrypt.OpenSSLX509Certificate&gt; fromPkcs7DerInputStream(java.io.InputStream)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.conscrypt.SSLServerSocketFactoryImpl java.net.ServerSocket createServerSocket()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
</root>
