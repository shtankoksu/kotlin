<root>
    <item name='libcore.io.StructPollfd java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='libcore.io.IoBridge void closeSocket(java.io.FileDescriptor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='libcore.io.Posix int pread(java.io.FileDescriptor, java.nio.ByteBuffer, long) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='libcore.io.BlockGuardOs int sendto(java.io.FileDescriptor, java.nio.ByteBuffer, int, java.net.InetAddress, int) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='libcore.io.Streams java.lang.String readFully(java.io.Reader)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='libcore.io.Memory int peekInt(byte[], int, java.nio.ByteOrder) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='libcore.io.Memory short peekShort(byte[], int, java.nio.ByteOrder) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='libcore.io.Memory void pokeShort(byte[], int, short, java.nio.ByteOrder) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='libcore.io.Os int pwrite(java.io.FileDescriptor, java.nio.ByteBuffer, long) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='libcore.io.IoUtils java.io.File createTemporaryDirectory(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='libcore.io.Posix int recvfrom(java.io.FileDescriptor, java.nio.ByteBuffer, int, java.net.InetSocketAddress) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='libcore.io.BlockGuardOs int recvfrom(java.io.FileDescriptor, java.nio.ByteBuffer, int, java.net.InetSocketAddress) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='libcore.io.DropBox void setReporter(libcore.io.DropBox.Reporter) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='libcore.io.Base64 byte[] decode(byte[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='libcore.io.IoBridge int read(java.io.FileDescriptor, byte[], int, int) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='libcore.io.MemoryMappedFile libcore.io.BufferIterator bigEndianIterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='libcore.io.Streams byte[] readFullyNoClose(java.io.InputStream)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='libcore.io.Streams void skipAll(java.io.InputStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='libcore.io.Os int write(java.io.FileDescriptor, java.nio.ByteBuffer) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='libcore.io.BlockGuardOs int pwrite(java.io.FileDescriptor, java.nio.ByteBuffer, long) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='libcore.io.IoBridge java.io.FileDescriptor open(java.lang.String, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='libcore.io.Os int recvfrom(java.io.FileDescriptor, java.nio.ByteBuffer, int, java.net.InetSocketAddress) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='libcore.io.Posix int pwrite(java.io.FileDescriptor, java.nio.ByteBuffer, long) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='libcore.io.ForwardingOs int write(java.io.FileDescriptor, java.nio.ByteBuffer) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='libcore.io.StructUcred java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='libcore.io.Os int read(java.io.FileDescriptor, java.nio.ByteBuffer) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='libcore.io.Os int sendto(java.io.FileDescriptor, java.nio.ByteBuffer, int, java.net.InetAddress, int) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='libcore.io.IoUtils byte[] readFileAsByteArray(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='libcore.io.Base64 java.lang.String encode(byte[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='libcore.io.Posix int sendto(java.io.FileDescriptor, java.nio.ByteBuffer, int, java.net.InetAddress, int) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='libcore.io.ForwardingOs int pread(java.io.FileDescriptor, java.nio.ByteBuffer, long) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='libcore.io.StructTimeval libcore.io.StructTimeval fromMillis(long)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='libcore.io.Os int pread(java.io.FileDescriptor, java.nio.ByteBuffer, long) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='libcore.io.Streams void writeSingleByte(java.io.OutputStream, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='libcore.io.Streams byte[] readFullyNoClose(java.io.InputStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='libcore.io.Streams int copy(java.io.InputStream, java.io.OutputStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='libcore.io.StructLinger java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='libcore.io.Streams int readSingleByte(java.io.InputStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='libcore.io.GaiException java.lang.String getMessage()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='libcore.io.BlockGuardOs int write(java.io.FileDescriptor, java.nio.ByteBuffer) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='libcore.io.ForwardingOs int read(java.io.FileDescriptor, java.nio.ByteBuffer) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='libcore.io.Memory long peekLong(byte[], int, java.nio.ByteOrder) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='libcore.io.Streams java.lang.String readAsciiLine(java.io.InputStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='libcore.io.BlockGuardOs int pread(java.io.FileDescriptor, java.nio.ByteBuffer, long) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='libcore.io.StructTimeval java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='libcore.io.StructGroupReq java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='libcore.io.ForwardingOs int sendto(java.io.FileDescriptor, java.nio.ByteBuffer, int, java.net.InetAddress, int) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='libcore.io.MemoryMappedFile libcore.io.MemoryMappedFile mmapRO(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='libcore.io.StrictLineReader StrictLineReader(java.io.InputStream, java.nio.charset.Charset) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='libcore.io.ForwardingOs int pwrite(java.io.FileDescriptor, java.nio.ByteBuffer, long) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='libcore.io.Posix int write(java.io.FileDescriptor, java.nio.ByteBuffer) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='libcore.io.DropBox.Reporter void addData(java.lang.String, byte[], int) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='libcore.io.EventLogger.Reporter void report(int, java.lang.Object...) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='libcore.io.EventLogger void setReporter(libcore.io.EventLogger.Reporter) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='libcore.io.Memory void pokeInt(byte[], int, int, java.nio.ByteOrder) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='libcore.io.IoUtils java.lang.String readFileAsString(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='libcore.io.Memory void pokeLong(byte[], int, long, java.nio.ByteOrder) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='libcore.io.ForwardingOs int recvfrom(java.io.FileDescriptor, java.nio.ByteBuffer, int, java.net.InetSocketAddress) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='libcore.io.HeapBufferIterator libcore.io.BufferIterator iterator(byte[], int, int, java.nio.ByteOrder)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='libcore.io.Base64 java.lang.String encode(byte[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='libcore.io.Streams byte[] readFully(java.io.InputStream)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='libcore.io.Streams byte[] readFully(java.io.InputStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='libcore.io.BlockGuardOs int read(java.io.FileDescriptor, java.nio.ByteBuffer) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='libcore.io.MemoryMappedFile libcore.io.BufferIterator littleEndianIterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='libcore.io.IoUtils java.lang.String readFileAsString(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='libcore.io.StrictLineReader StrictLineReader(java.io.InputStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='libcore.io.ErrnoException java.lang.String getMessage()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='libcore.io.StrictLineReader StrictLineReader(java.io.InputStream, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='libcore.io.IoUtils void deleteContents(java.io.File) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='libcore.io.Streams java.lang.String readFully(java.io.Reader) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='libcore.io.Streams java.lang.String readAsciiLine(java.io.InputStream)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='libcore.io.StrictLineReader java.lang.String readLine()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='libcore.io.IoBridge void write(java.io.FileDescriptor, byte[], int, int) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='libcore.io.Streams void readFully(java.io.InputStream, byte[]) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='libcore.io.StrictLineReader StrictLineReader(java.io.InputStream, int, java.nio.charset.Charset) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='libcore.io.Posix int read(java.io.FileDescriptor, java.nio.ByteBuffer) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='libcore.io.StrictLineReader StrictLineReader(java.io.InputStream, int, java.nio.charset.Charset) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='libcore.io.StrictLineReader StrictLineReader(java.io.InputStream, java.nio.charset.Charset) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
</root>
