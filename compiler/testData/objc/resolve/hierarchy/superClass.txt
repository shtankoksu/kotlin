package objc

public trait <metaclass-for-Base> : objc.<metaclass-for-NSObject> {
}

public trait <metaclass-for-Derived> : objc.<metaclass-for-Base> {
}

public trait <metaclass-for-NSObject> {
}

public open class Base : objc.NSObject {
    public open fun someBaseMethod(): jet.Unit
    
    public class object <class-object-for-Base> : jet.objc.ObjCClass, objc.<metaclass-for-Base>, objc.NSObject {
    }
}

public open class Derived : objc.Base {
    public open override /*1*/ /*fake_override*/ fun someBaseMethod(): jet.Unit
    public open fun someDerivedMethod(): jet.Unit
    
    public class object <class-object-for-Derived> : jet.objc.ObjCClass, objc.<metaclass-for-Derived>, objc.NSObject {
    }
}

public open class NSObject : jet.objc.ObjCObject {
    
    public class object <class-object-for-NSObject> : jet.objc.ObjCClass, objc.<metaclass-for-NSObject>, objc.NSObject {
    }
}
