package objc

public trait <metaclass-for-Base> {
}

public trait <metaclass-for-Derived> : objc.<metaclass-for-Base> {
    public open fun derivedMethod(): jet.Unit
}

public open class Base : jet.objc.ObjCObject {
    invisible_fake abstract override /*1*/ /*fake_override*/ val pointer: jet.Long
    
    public class object <class-object-for-Base> : jet.objc.ObjCClass, objc.<metaclass-for-Base>, objc.Base {
        invisible_fake abstract override /*1*/ /*fake_override*/ val pointer: jet.Long
    }
}

public open class Derived : objc.Base {
    invisible_fake abstract override /*1*/ /*fake_override*/ val pointer: jet.Long
    
    public class object <class-object-for-Derived> : jet.objc.ObjCClass, objc.<metaclass-for-Derived>, objc.Base {
        invisible_fake abstract override /*1*/ /*fake_override*/ val pointer: jet.Long
        public open override /*1*/ /*fake_override*/ fun derivedMethod(): jet.Unit
    }
}
