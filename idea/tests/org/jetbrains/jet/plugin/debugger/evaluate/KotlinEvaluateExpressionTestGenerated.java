/*
 * Copyright 2010-2014 JetBrains s.r.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.jetbrains.jet.plugin.debugger.evaluate;

import junit.framework.Assert;
import junit.framework.Test;
import junit.framework.TestSuite;

import java.io.File;
import java.util.regex.Pattern;
import org.jetbrains.jet.JetTestUtils;
import org.jetbrains.jet.test.InnerTestClasses;
import org.jetbrains.jet.test.TestMetadata;

import org.jetbrains.jet.plugin.debugger.evaluate.AbstractKotlinEvaluateExpressionTest;

/** This class is generated by {@link org.jetbrains.jet.generators.tests.TestsPackage}. DO NOT MODIFY MANUALLY */
@SuppressWarnings("all")
@TestMetadata("idea/testData/debugger/tinyApp/src/evaluate")
public class KotlinEvaluateExpressionTestGenerated extends AbstractKotlinEvaluateExpressionTest {
    @TestMetadata("abstractFunCall.kt")
    public void testAbstractFunCall() throws Exception {
        doTest("idea/testData/debugger/tinyApp/src/evaluate/abstractFunCall.kt");
    }
    
    public void testAllFilesPresentInEvaluate() throws Exception {
        JetTestUtils.assertAllTestsPresentByMetadata(this.getClass(), "org.jetbrains.jet.generators.tests.TestsPackage", new File("idea/testData/debugger/tinyApp/src/evaluate"), Pattern.compile("^(.+)\\.kt$"), true);
    }
    
    @TestMetadata("arrays.kt")
    public void testArrays() throws Exception {
        doTest("idea/testData/debugger/tinyApp/src/evaluate/arrays.kt");
    }
    
    @TestMetadata("classObjectVal.kt")
    public void testClassObjectVal() throws Exception {
        doTest("idea/testData/debugger/tinyApp/src/evaluate/classObjectVal.kt");
    }
    
    @TestMetadata("collections.kt")
    public void testCollections() throws Exception {
        doTest("idea/testData/debugger/tinyApp/src/evaluate/collections.kt");
    }
    
    @TestMetadata("dependentOnFile.kt")
    public void testDependentOnFile() throws Exception {
        doTest("idea/testData/debugger/tinyApp/src/evaluate/dependentOnFile.kt");
    }
    
    @TestMetadata("enums.kt")
    public void testEnums() throws Exception {
        doTest("idea/testData/debugger/tinyApp/src/evaluate/enums.kt");
    }
    
    @TestMetadata("extractLocalVariables.kt")
    public void testExtractLocalVariables() throws Exception {
        doTest("idea/testData/debugger/tinyApp/src/evaluate/extractLocalVariables.kt");
    }
    
    @TestMetadata("extractThis.kt")
    public void testExtractThis() throws Exception {
        doTest("idea/testData/debugger/tinyApp/src/evaluate/extractThis.kt");
    }
    
    @TestMetadata("extractVariablesFromCall.kt")
    public void testExtractVariablesFromCall() throws Exception {
        doTest("idea/testData/debugger/tinyApp/src/evaluate/extractVariablesFromCall.kt");
    }
    
    @TestMetadata("imports.kt")
    public void testImports() throws Exception {
        doTest("idea/testData/debugger/tinyApp/src/evaluate/imports.kt");
    }
    
    @TestMetadata("multilineExpressionAtBreakpoint.kt")
    public void testMultilineExpressionAtBreakpoint() throws Exception {
        doTest("idea/testData/debugger/tinyApp/src/evaluate/multilineExpressionAtBreakpoint.kt");
    }
    
    @TestMetadata("simple.kt")
    public void testSimple() throws Exception {
        doTest("idea/testData/debugger/tinyApp/src/evaluate/simple.kt");
    }
    
    @TestMetadata("stdlib.kt")
    public void testStdlib() throws Exception {
        doTest("idea/testData/debugger/tinyApp/src/evaluate/stdlib.kt");
    }
    
    @TestMetadata("vars.kt")
    public void testVars() throws Exception {
        doTest("idea/testData/debugger/tinyApp/src/evaluate/vars.kt");
    }
    
}
