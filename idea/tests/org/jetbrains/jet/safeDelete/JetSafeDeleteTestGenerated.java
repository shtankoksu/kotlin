/*
 * Copyright 2010-2013 JetBrains s.r.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.jetbrains.jet.safeDelete;

import junit.framework.Assert;
import junit.framework.Test;
import junit.framework.TestSuite;

import java.io.File;
import java.util.regex.Pattern;
import org.jetbrains.jet.JetTestUtils;
import org.jetbrains.jet.test.InnerTestClasses;
import org.jetbrains.jet.test.TestMetadata;

import org.jetbrains.jet.safeDelete.AbstractJetSafeDeleteTest;

/** This class is generated by {@link org.jetbrains.jet.generators.tests.GenerateTests}. DO NOT MODIFY MANUALLY */
@SuppressWarnings("all")
@InnerTestClasses({JetSafeDeleteTestGenerated.DeleteClass.class, JetSafeDeleteTestGenerated.DeleteObject.class, JetSafeDeleteTestGenerated.DeleteFunction.class, JetSafeDeleteTestGenerated.DeleteFunctionWithJavaUsages.class, JetSafeDeleteTestGenerated.DeleteJavaMethod.class})
public class JetSafeDeleteTestGenerated extends AbstractJetSafeDeleteTest {
    @TestMetadata("idea/testData/safeDelete/deleteClass")
    public static class DeleteClass extends AbstractJetSafeDeleteTest {
        public void testAllFilesPresentInDeleteClass() throws Exception {
            JetTestUtils.assertAllTestsPresentByMetadata(this.getClass(), "org.jetbrains.jet.generators.tests.GenerateTests", new File("idea/testData/safeDelete/deleteClass"), Pattern.compile("^(.+)\\.kt$"), true);
        }
        
        @TestMetadata("class1.kt")
        public void testClass1() throws Exception {
            doClassTest("idea/testData/safeDelete/deleteClass/class1.kt");
        }
        
        @TestMetadata("class2.kt")
        public void testClass2() throws Exception {
            doClassTest("idea/testData/safeDelete/deleteClass/class2.kt");
        }
        
        @TestMetadata("nestedClass1.kt")
        public void testNestedClass1() throws Exception {
            doClassTest("idea/testData/safeDelete/deleteClass/nestedClass1.kt");
        }
        
        @TestMetadata("nestedClass2.kt")
        public void testNestedClass2() throws Exception {
            doClassTest("idea/testData/safeDelete/deleteClass/nestedClass2.kt");
        }
        
        @TestMetadata("noUsages.kt")
        public void testNoUsages() throws Exception {
            doClassTest("idea/testData/safeDelete/deleteClass/noUsages.kt");
        }
        
        @TestMetadata("trait1.kt")
        public void testTrait1() throws Exception {
            doClassTest("idea/testData/safeDelete/deleteClass/trait1.kt");
        }
        
        @TestMetadata("trait2.kt")
        public void testTrait2() throws Exception {
            doClassTest("idea/testData/safeDelete/deleteClass/trait2.kt");
        }
        
        @TestMetadata("unsafeImport.kt")
        public void testUnsafeImport() throws Exception {
            doClassTest("idea/testData/safeDelete/deleteClass/unsafeImport.kt");
        }
        
    }
    
    @TestMetadata("idea/testData/safeDelete/deleteObject")
    public static class DeleteObject extends AbstractJetSafeDeleteTest {
        public void testAllFilesPresentInDeleteObject() throws Exception {
            JetTestUtils.assertAllTestsPresentByMetadata(this.getClass(), "org.jetbrains.jet.generators.tests.GenerateTests", new File("idea/testData/safeDelete/deleteObject"), Pattern.compile("^(.+)\\.kt$"), true);
        }
        
        @TestMetadata("nestedObject1.kt")
        public void testNestedObject1() throws Exception {
            doObjectTest("idea/testData/safeDelete/deleteObject/nestedObject1.kt");
        }
        
        @TestMetadata("nestedObject2.kt")
        public void testNestedObject2() throws Exception {
            doObjectTest("idea/testData/safeDelete/deleteObject/nestedObject2.kt");
        }
        
        @TestMetadata("noUsages.kt")
        public void testNoUsages() throws Exception {
            doObjectTest("idea/testData/safeDelete/deleteObject/noUsages.kt");
        }
        
        @TestMetadata("object1.kt")
        public void testObject1() throws Exception {
            doObjectTest("idea/testData/safeDelete/deleteObject/object1.kt");
        }
        
        @TestMetadata("object2.kt")
        public void testObject2() throws Exception {
            doObjectTest("idea/testData/safeDelete/deleteObject/object2.kt");
        }
        
        @TestMetadata("unsafeImport.kt")
        public void testUnsafeImport() throws Exception {
            doObjectTest("idea/testData/safeDelete/deleteObject/unsafeImport.kt");
        }
        
    }
    
    @TestMetadata("idea/testData/safeDelete/deleteFunction")
    public static class DeleteFunction extends AbstractJetSafeDeleteTest {
        public void testAllFilesPresentInDeleteFunction() throws Exception {
            JetTestUtils.assertAllTestsPresentByMetadata(this.getClass(), "org.jetbrains.jet.generators.tests.GenerateTests", new File("idea/testData/safeDelete/deleteFunction"), Pattern.compile("^(.+)\\.kt$"), true);
        }
        
        @TestMetadata("fun1.kt")
        public void testFun1() throws Exception {
            doFunctionTest("idea/testData/safeDelete/deleteFunction/fun1.kt");
        }
        
        @TestMetadata("fun2.kt")
        public void testFun2() throws Exception {
            doFunctionTest("idea/testData/safeDelete/deleteFunction/fun2.kt");
        }
        
        @TestMetadata("implement1.kt")
        public void testImplement1() throws Exception {
            doFunctionTest("idea/testData/safeDelete/deleteFunction/implement1.kt");
        }
        
        @TestMetadata("implement2.kt")
        public void testImplement2() throws Exception {
            doFunctionTest("idea/testData/safeDelete/deleteFunction/implement2.kt");
        }
        
        @TestMetadata("noUsages.kt")
        public void testNoUsages() throws Exception {
            doFunctionTest("idea/testData/safeDelete/deleteFunction/noUsages.kt");
        }
        
        @TestMetadata("override1.kt")
        public void testOverride1() throws Exception {
            doFunctionTest("idea/testData/safeDelete/deleteFunction/override1.kt");
        }
        
        @TestMetadata("override2.kt")
        public void testOverride2() throws Exception {
            doFunctionTest("idea/testData/safeDelete/deleteFunction/override2.kt");
        }
        
        @TestMetadata("overrideAndImplement1.kt")
        public void testOverrideAndImplement1() throws Exception {
            doFunctionTest("idea/testData/safeDelete/deleteFunction/overrideAndImplement1.kt");
        }
        
        @TestMetadata("overrideAndImplement2.kt")
        public void testOverrideAndImplement2() throws Exception {
            doFunctionTest("idea/testData/safeDelete/deleteFunction/overrideAndImplement2.kt");
        }
        
        @TestMetadata("overrideWithUsages.kt")
        public void testOverrideWithUsages() throws Exception {
            doFunctionTest("idea/testData/safeDelete/deleteFunction/overrideWithUsages.kt");
        }
        
    }
    
    @TestMetadata("idea/testData/safeDelete/deleteFunctionWithJavaUsages")
    public static class DeleteFunctionWithJavaUsages extends AbstractJetSafeDeleteTest {
        public void testAllFilesPresentInDeleteFunctionWithJavaUsages() throws Exception {
            JetTestUtils.assertAllTestsPresentByMetadata(this.getClass(), "org.jetbrains.jet.generators.tests.GenerateTests", new File("idea/testData/safeDelete/deleteFunctionWithJavaUsages"), Pattern.compile("^(.+)\\.kt$"), true);
        }
        
        @TestMetadata("implement1.kt")
        public void testImplement1() throws Exception {
            doFunctionTestWithJava("idea/testData/safeDelete/deleteFunctionWithJavaUsages/implement1.kt");
        }
        
        @TestMetadata("implement2.kt")
        public void testImplement2() throws Exception {
            doFunctionTestWithJava("idea/testData/safeDelete/deleteFunctionWithJavaUsages/implement2.kt");
        }
        
        @TestMetadata("implement3.kt")
        public void testImplement3() throws Exception {
            doFunctionTestWithJava("idea/testData/safeDelete/deleteFunctionWithJavaUsages/implement3.kt");
        }
        
        @TestMetadata("implement4.kt")
        public void testImplement4() throws Exception {
            doFunctionTestWithJava("idea/testData/safeDelete/deleteFunctionWithJavaUsages/implement4.kt");
        }
        
        @TestMetadata("override1.kt")
        public void testOverride1() throws Exception {
            doFunctionTestWithJava("idea/testData/safeDelete/deleteFunctionWithJavaUsages/override1.kt");
        }
        
        @TestMetadata("override2.kt")
        public void testOverride2() throws Exception {
            doFunctionTestWithJava("idea/testData/safeDelete/deleteFunctionWithJavaUsages/override2.kt");
        }
        
        @TestMetadata("override3.kt")
        public void testOverride3() throws Exception {
            doFunctionTestWithJava("idea/testData/safeDelete/deleteFunctionWithJavaUsages/override3.kt");
        }
        
        @TestMetadata("overrideAndImplement1.kt")
        public void testOverrideAndImplement1() throws Exception {
            doFunctionTestWithJava("idea/testData/safeDelete/deleteFunctionWithJavaUsages/overrideAndImplement1.kt");
        }
        
        @TestMetadata("overrideAndImplement2.kt")
        public void testOverrideAndImplement2() throws Exception {
            doFunctionTestWithJava("idea/testData/safeDelete/deleteFunctionWithJavaUsages/overrideAndImplement2.kt");
        }
        
    }
    
    @TestMetadata("idea/testData/safeDelete/deleteJavaMethod")
    public static class DeleteJavaMethod extends AbstractJetSafeDeleteTest {
        public void testAllFilesPresentInDeleteJavaMethod() throws Exception {
            JetTestUtils.assertAllTestsPresentByMetadata(this.getClass(), "org.jetbrains.jet.generators.tests.GenerateTests", new File("idea/testData/safeDelete/deleteJavaMethod"), Pattern.compile("^(.+)\\.kt$"), true);
        }
        
        @TestMetadata("mixedHierarchy1.kt")
        public void testMixedHierarchy1() throws Exception {
            doJavaMethodTest("idea/testData/safeDelete/deleteJavaMethod/mixedHierarchy1.kt");
        }
        
        @TestMetadata("mixedHierarchy2.kt")
        public void testMixedHierarchy2() throws Exception {
            doJavaMethodTest("idea/testData/safeDelete/deleteJavaMethod/mixedHierarchy2.kt");
        }
        
    }
    
    public static Test suite() {
        TestSuite suite = new TestSuite("JetSafeDeleteTestGenerated");
        suite.addTestSuite(DeleteClass.class);
        suite.addTestSuite(DeleteObject.class);
        suite.addTestSuite(DeleteFunction.class);
        suite.addTestSuite(DeleteFunctionWithJavaUsages.class);
        suite.addTestSuite(DeleteJavaMethod.class);
        return suite;
    }
}
