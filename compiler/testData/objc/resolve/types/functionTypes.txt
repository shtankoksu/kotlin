package objc

public trait <metaclass-for-A> : objc.<metaclass-for-NSObject> {
}

public trait <metaclass-for-NSObject> {
}

public open class A : objc.NSObject {
    invisible_fake final override /*1*/ /*fake_override*/ val pointer: kotlin.Long
    public open fun f01(): () -> kotlin.Unit
    public open fun f02(): () -> kotlin.Int
    public open fun f03(): () -> kotlin.jvm.objc.Pointer<out kotlin.Any?>
    public open fun f04(): () -> kotlin.jvm.objc.Pointer<kotlin.Int>
    public open fun f05(): () -> kotlin.Unit
    public open fun f06(): (kotlin.jvm.objc.Pointer<out kotlin.Any?>) -> kotlin.Unit
    public open fun f07(): (kotlin.Int) -> kotlin.Unit
    public open fun f08(): (kotlin.jvm.objc.Pointer<kotlin.Int>) -> kotlin.Unit
    public open fun f09(): (kotlin.Int, kotlin.jvm.objc.Pointer<kotlin.Int>, kotlin.jvm.objc.Pointer<out kotlin.Any?>, kotlin.Int) -> kotlin.Unit
    public open fun f10(): (() -> kotlin.Unit) -> kotlin.Unit
    public open fun f11(): (() -> kotlin.Unit) -> kotlin.Unit
    public open fun f12(): (kotlin.Int) -> kotlin.Unit
    public open fun f13(): (() -> kotlin.Unit) -> kotlin.Unit
    public open fun f14(): ((kotlin.Int) -> kotlin.Unit) -> kotlin.Unit
    public open fun f15(): (kotlin.jvm.objc.ObjCObject, kotlin.jvm.objc.ObjCObject, kotlin.jvm.objc.ObjCSelector) -> objc.A
    public open fun f16(): ((kotlin.Int, kotlin.jvm.objc.Pointer<kotlin.Char>) -> kotlin.Unit, () -> kotlin.jvm.objc.Pointer<out kotlin.Any?>) -> kotlin.Unit

    public class object <class-object-for-A> : kotlin.jvm.objc.ObjCClass, objc.<metaclass-for-A>, objc.NSObject {
        invisible_fake final override /*1*/ /*fake_override*/ val pointer: kotlin.Long
    }
}

public open class NSObject : kotlin.jvm.objc.ObjCObject {
    invisible_fake final override /*1*/ /*fake_override*/ val pointer: kotlin.Long

    public class object <class-object-for-NSObject> : kotlin.jvm.objc.ObjCClass, objc.<metaclass-for-NSObject>, objc.NSObject {
        invisible_fake final override /*1*/ /*fake_override*/ val pointer: kotlin.Long
    }
}
